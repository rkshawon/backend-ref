openapi: 3.0.0
info:
  title: Auction API
  version: 1.0.0
paths:
  /growes/auctions:
    get:
      summary: Get a list of auctions
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Auction"
        "500":
          $ref: "#/components/responses/ServerError"
    post:
      summary: Create a new auction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Auction"
      responses:
        "201":
          description: Auction created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Auction"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/ServerError"
  /auctions/{auctionId}:
    get:
      summary: Get auction by ID
      parameters:
        - in: path
          name: auctionId
          required: true
          schema:
            type: string
          description: ID of the auction
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Auction"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/ServerError"
components:
  schemas:
    Auction:
      type: object
      properties:
        _id:
          type: string
          description: The auction ID
        product:
          type: object
          properties:
            _id:
              type: string
              description: The product ID
            title:
              type: string
              description: Product Title
        total_quantity:
          type: number
          description: Total quantity for auction
        start_date:
          type: string
          format: date-time
          description: Auction start date
        duration:
          type: number
          description: Auction duration in seconds
        end_date:
          type: string
          format: date-time
          description: Auction end date
        reserve_price:
          type: number
          description: Reserve price for the auction
        buy_now_price:
          type: number
          description: Buy now price for the auction
        company:
          type: object
          properties:
            _id:
              type: string
              description: The company ID
            name:
              type: string
              description: Company name
        winner:
          type: object
          properties:
            _id:
              type: string
              description: The user ID
            username:
              type: string
              description: Winner's username
        status:
          type: string
          enum: ["pending", "awarded", "cancelled"]
          description: Auction status
      required:
        - _id
        - product
        - total_quantity
        - start_date
        - duration
        - end_date
        - reserve_price
        - status
      example:
        _id: 63550a26d2597d9e5101a5af
        product:
          _id: 63550a26d2597d9e5101a5bf
          title: Bluetooth
        total_quantity: 10
        start_date: "2023-09-01T10:00:00Z"
        duration: 3600
        end_date: "2023-09-01T11:00:00Z"
        reserve_price: 100
        status: pending
  responses:
    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            code: 404
            message: Not found
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            code: 400
            message: Bad request
    ServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            code: 500
            message: Internal server error
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
